'''
https://leetcode.com/problems/rotate-array/description/?envType=study-plan-v2&envId=top-interview-150

Approach I) Circulate ... around..
            keep the prev.. in variable.
            if the target == start, then break... and set start=start+1

Approach II)
        k = k % len
        reverse whole array
        reverse till k-1
        reverse k to N-1

'''
def reverse_array(nums, start, end):
    l = start
    r = end
    while r > l:
        tmp = nums[r]
        nums[r] = nums[l]
        nums[l] = tmp
        r -= 1
        l += 1
    
   

def rotate_array(nums: list[int], k:int):
    N = len(nums)
    k = k % N
    if k == 0:
        return nums
    reverse_array(nums, 0, N-1)
    reverse_array(nums, 0, k-1)
    reverse_array(nums, k, N-1)


def rotate_array_circulate(nums:list[int], k:int):
    N = len(nums)
    count = 0
    start = 0
    k = k % N
    prev = nums[0]
    j = 0
    while count < N:
        j = start
        prev = nums[j]
        while True:
            j = (j + k ) % N
            tmp = nums[j]
            nums[j] = prev
            prev = tmp
            count += 1
            if j == start:
                start += 1 
                break

   

nums = [1,2,3,4,5,6,7]
k = 3
#Output: [5,6,7,1,2,3,4]
print("input: " + str(nums) + "    k=" + str(k))
rotate_array(nums, k)
print("output: " + str(nums))


nums = [1,2,3,4,5,6,7]
rotate_array_circulate(nums, k)
print("output-rotate_array_circulate: " + str(nums))


nums = [-1,-100,3,99]
k = 2
#Output: [3,99,-1,-100]
rotate_array(nums, k)
print("output: " + str(nums))

nums = [-1,-100,3,99]
rotate_array_circulate(nums, k)
print("output-rotate_array_circulate: " + str(nums))
